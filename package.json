{
  "name": "app",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "//------------------- Build: Clean -------------------//": "",
    "build:clean": "rm -rf dist/ && mkdir -p dist/",
    "//------------------- Build: Assets - Fonts -------------------//": "",
    "build:assets:fonts:clean": "rm -rf dist/assets/fonts/ && mkdir -p dist/assets/fonts/",
    "build:assets:fonts:make:src": "cp -rf src/assets/fonts/* dist/assets/fonts/",
    "build:assets:fonts:make:bootstrap": "mkdir -p dist/assets/fonts/bootstrap/ && cp -rf node_modules/bootstrap-sass/assets/fonts/* dist/assets/fonts/",
    "build:assets:fonts:make:font-awesome": "mkdir -p dist/assets/fonts/font-awesome/ && cp -rf node_modules/font-awesome/fonts/* dist/assets/fonts/font-awesome/",
    "build:assets:fonts:make": "npm run build:assets:fonts:make:src && npm run build:assets:fonts:make:bootstrap && npm run build:assets:fonts:make:font-awesome",
    "build:assets:fonts": "npm run build:assets:fonts:clean && npm run build:assets:fonts:make",
    "//------------------- Build: Assets - Images -------------------//": "",
    "build:assets:images:clean": "rm -rf dist/assets/images/ && mkdir -p dist/assets/images/",
    "build:assets:images:make": "cp -rf src/assets/images/* dist/assets/images/",
    "build:assets:images": "npm run build:assets:images:clean && npm run build:assets:images:make",
    "//------------------- Build: Assets - Css -------------------//": "",
    "build:assets:css:clean": "rm -rf dist/assets/css/ && mkdir -p dist/assets/css/",
    "build:assets:css:make:compile:vendor": "node_modules/.bin/node-sass --output-style compressed src/vendor.scss src/assets/css/vendor.css",
    "build:assets:css:make:compile:index": "node_modules/.bin/node-sass --output-style compressed src/index.scss src/assets/css/index.css",
    "build:assets:css:make:compile": "npm run build:assets:css:make:compile:vendor && npm run build:assets:css:make:compile:index",
    "build:assets:css:make:cp": "cp -f src/assets/css/*.css* dist/assets/css/",
    "build:assets:css:make:ln": "rm -rf dist/assets/css/ && ln -fs $(pwd)/src/assets/css $(pwd)/dist/assets",
    "build-dev:assets:css": "npm run build:assets:css:clean && npm run build:assets:css:make:compile && npm run build:assets:css:make:ln",
    "build:assets:css": "npm run build:assets:css:clean && npm run build:assets:css:make:compile && npm run build:assets:css:make:cp",
    "//------------------- Build: Assets - Js -------------------//": "",
    "build:assets:js:clean": "rm -rf dist/assets/js/ && mkdir -p dist/assets/js/",
    "build:assets:js:make": "node minifier.js all",
    "build:assets:js": "npm run build:assets:js:clean && npm run build:assets:js:make",
    "//------------------- Build: Assets -------------------//": "",
    "build:assets:clean": "rm -rf dist/assets/ && mkdir -p dist/assets/",
    "build-dev:assets": "npm run build:assets:clean && npm run build:assets:fonts && npm run build:assets:images && npm run build-dev:assets:css",
    "build:assets": "npm run build:assets:clean && npm run build:assets:fonts && npm run build:assets:images && npm run build:assets:css && npm run build:assets:js",
    "//------------------- Build: HTML -------------------//": "",
    "build:html:clean": "rm -rf dist/*.html && rm -rf dist/app/ &&  mkdir -p dist/app/",
    "build:html:make:cp": "find src -name '*.html' | cpio -pdmu --quiet dist && cp -rf dist/src/* dist/ && rm -rf dist/src/",
    "build:html:make:date": "node_modules/.bin/replace --silent '{{buildDate}}' `date +%s` dist/index.html",
    "build:html:make": "npm run build:html:make:cp && npm run build:html:make:date",
    "build:html": "npm run build:html:clean && npm run build:html:make",
    "//------------------- Build -------------------//": "",
    "build-dev:inject": "node injector.js",
    "build-dev": "npm run build:clean && npm run build-dev:assets && npm run build-dev:inject",
    "build": "npm run build:clean && npm run build:assets && npm run build:html",
    "//------------------- Watch -------------------//": "",
    "watch": "node watcher.js"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "angular": "^1.5.8",
    "angular-animate": "^1.5.8",
    "angular-block-ui": "^0.2.2",
    "angular-breadcrumb": "^0.4.1",
    "angular-cookies": "^1.5.8",
    "angular-file-upload": "^2.3.4",
    "angular-filter": "^0.5.11",
    "angular-i18n": "^1.5.8",
    "angular-loading-bar": "^0.9.0",
    "angular-messages": "^1.5.8",
    "angular-mocks": "^1.5.8",
    "angular-moment": "^1.0.0-beta.6",
    "angular-resource": "^1.5.8",
    "angular-sanitize": "^1.5.8",
    "angular-toastr": "^2.1.1",
    "angular-toggle-switch": "^1.3.0",
    "angular-touch": "^1.5.8",
    "angular-ui-bootstrap": "^2.1.3",
    "angular-ui-router": "^0.3.1",
    "angular-validation-match": "^1.9.0",
    "angular-vertilize": "^1.0.0",
    "angular-xeditable": "^0.3.0",
    "angularjs-slider": "^5.5.0",
    "bootstrap-sass": "^3.3.7",
    "colors": "^1.1.2",
    "font-awesome": "^4.6.3",
    "fs-extra": "^0.30.0",
    "glob": "^7.0.6",
    "jquery": "^3.1.0",
    "moment": "^2.14.1",
    "ng-dialog": "^0.6.4",
    "ng-infinite-scroll": "^1.3.0",
    "ngsticky": "^1.7.12",
    "node-minify": "^1.3.9",
    "node-sass": "^3.9.3",
    "node-watch": "^0.4.0",
    "replace": "^0.3.0",
    "restangular": "^1.5.2",
    "rimraf": "^2.5.4",
    "ui-select": "^0.19.4",
    "underscore": "^1.8.3"
  }
}
